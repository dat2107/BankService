async function loadUsers(query = "") {
    const token = localStorage.getItem("token");
    if (!token) {
        alert("B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p!");
        return;
    }

    let url = "/api/users";
    if (query) {
        url += "?keyword=" + encodeURIComponent(query);   // ‚úÖ truy·ªÅn param search
    }

    const response = await fetch(url, {
        method: "GET",
        headers: {
            "Authorization": "Bearer " + token,
            "Content-Type": "application/json"
        }
    });

    if (!response.ok) {
        console.error("Failed to fetch users", response.status);
        return;
    }

    const users = await response.json();
    let tbody = document.querySelector("#userTableBody");
    tbody.innerHTML = "";

    users.forEach(u => {
        // badge m√†u cho role
        let roleBadge = u.role === "ADMIN"
            ? `<span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-purple-100 text-purple-800">${getRoleDisplay(u.role)}</span>`
            : `<span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800">${getRoleDisplay(u.role)}</span>`;

        tbody.innerHTML += `
                <tr class="hover:bg-gray-50 transition-colors duration-200">
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">${u.id}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${u.username}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                        ${u.account && u.account.email ? u.account.email : 'N/A'}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">${roleBadge}</td>
                </tr>`;
    });
}

function getRoleDisplay(role) {
    if (!role) return "N/A";
    switch (role.toUpperCase()) {
        case "USER": return "Customer";
        case "ADMIN": return "Admin";
        default: return role;
    }
}

document.addEventListener("DOMContentLoaded", () => loadUsers());

async function loadPage(url) {
    try {
        const response = await fetch(url, {
            headers: { "X-Requested-With": "XMLHttpRequest" }
        });
        if (!response.ok) throw new Error(response.status);

        const html = await response.text();

        const main = document.getElementById("mainContent");
        main.innerHTML = html;

        // b·∫Øn s·ª± ki·ªán ƒë·ªÉ JS c·ªßa t·ª´ng page x·ª≠ l√Ω
        document.dispatchEvent(new CustomEvent("pageLoaded", { detail: url }));

    } catch (e) {
        document.getElementById("mainContent").innerHTML =
            "<p class='text-red-600'>L·ªói t·∫£i trang!</p>";
        console.error("Error loading page:", e);
    }
}

function navigate(event, url) {
    event.preventDefault();

    history.pushState({ path: url }, "", url);
    loadPage(url);   // fetch ch√≠nh /user
}


function goDashboard(event) {
    event.preventDefault(); // ch·∫∑n m·∫∑c ƒë·ªãnh ƒë·ªÉ x·ª≠ l√Ω b·∫±ng JS
    window.location.href = "/dashboard"; // reload nguy√™n trang
}

// B·∫Øt s·ª± ki·ªán back/forward c·ªßa tr√¨nh duy·ªát
window.onpopstate = function(event) {
    if (event.state) {
        loadPage(event.state.path);
    }
};

document.addEventListener("DOMContentLoaded", async () => {
    try {
        const token = localStorage.getItem("token");
        const res = await fetch("/api/account", {
            headers: { "Authorization": "Bearer " + token }
        });

        if (!res.ok) {
            console.error("Kh√¥ng th·ªÉ load danh s√°ch account");
            return;
        }

        const accounts = await res.json();

        // ƒê·∫øm s·ªë user
        const totalUsers = accounts.length;

        // ƒê·∫øm s·ªë th·∫ª
        const totalCards = accounts.reduce((sum, acc) => sum + (acc.cards ? acc.cards.length : 0), 0);

        // üëâ N·∫øu b·∫°n c√≥ API transaction ri√™ng th√¨ g·ªçi th√™m ·ªü ƒë√¢y
        let totalTransactions = 0;
        try {
            const txRes = await fetch("/api/transaction", {
                headers: { "Authorization": "Bearer " + token }
            });
            if (txRes.ok) {
                const txData = await txRes.json();
                totalTransactions = txData.totalElements || txData.length || 0;
            }
        } catch (err) {
            console.warn("Kh√¥ng load ƒë∆∞·ª£c transaction, ƒë·∫∑t m·∫∑c ƒë·ªãnh = 0");
        }

        // C·∫≠p nh·∫≠t v√†o dashboard
        document.getElementById("statUsers").textContent = totalUsers.toLocaleString();
        document.getElementById("statCards").textContent = totalCards.toLocaleString();
        document.getElementById("statTransactions").textContent = totalTransactions.toLocaleString();

    } catch (err) {
        console.error("L·ªói khi load stats:", err);
    }
});

function searchUsers() {
    const query = document.getElementById("searchInput").value.trim();
    loadUsers(query);
}
